!function (e) { e.fn.createDropzone = function (t = {}) { let l = `${GETCONFIG("SERVER_SIDE")}/View/assets/createDropzone`, n = e(this), o = e(this).get(0), a = Date.now(); if (t = e.extend({ preview: !1, action: "INSERT", table: "Dropzone", id: !1 }, t), this) e.ajax(`${l}/createDropzone.php?action=template`, { dataType: "HTML", type: "POST", data: { ident: a }, success(i) { let r = n.find("input:file"); r.length && r.each(function (n) { let r = e(this), p = {}; r.get(0).attributes.forEach(e => { p[e.name] = e.value }), r.replaceWith(elementCreator("div", { "data-createDropzone": a, id: p.id ?? a })); let s = e(`[data-createDropzone="${a}"]`); s.append(i.replaceAll(a, `${n}-${a}`)); let c = e(`#template-${n}-${a}`); c.removeAttr("id"); let u = c.parent().html(); c.parent().get(0).removeChild(c.get(0)); let d = e.extend({ url: `${l}/createDropzone.php?action=${t.action}&table=${t.table}`, autoProcessQueue: !1, uploadMultiple: !!p.multiple, parallelUploads: 100, maxFiles: 100, paramName: p.name ?? "file[Dropzone][]", previewTemplate: u, previewsContainer: `#previews-${n}-${a}`, clickable: `.fileinput-button-${n}-${a}`, init: function () { var t = this; e(this.element).on("submit", e => { e.preventDefault(), 0 == t.files.length && t._uploadData([{ upload: { filename: "" } }], [{ filename: "", name: "", data: new Blob }]), t.processQueue() }), e(this.element).find(`#actions-${n}-${a} .cancel`).on("click", () => { t.removeAllFiles(!0) }), this.on("totaluploadprogress", function (e) { document.querySelector(`#total-progress-${n}-${a} .progress-bar`).style.width = `${e}%` }), this.on("queuecomplete", function (e) { document.querySelector(`#total-progress-${n}-${a}`).style.opacity = "0" }), this.on("sendingmultiple", function () { }), this.on("successmultiple", function (e, t) { console.log(t) }), this.on("errormultiple", function (e, t) { console.log(t) }) } }, t), h = new Dropzone(o, d); return h }) } }); else throw Error(`Selector no valido ${this}`) } }(jQuery);